using ClassLibrary; // Подключение пространства имен библиотеки классов, содержащей логику банкомата.

namespace ATMConsoleApp // Определение пространства имен консольного приложения для работы с банкоматом.
{
    internal class Program // Объявление класса программы.
    {
        static void Main(string[] args) // Точка входа в приложение.
        {
            // Создаем экземпляр банкомата, указывая ID, начальный баланс, статус подключения и вероятность сбоя соединения.
            var atm = new AtmMachine(1, 10000, true, 0.1);

            atm.Alert = Console.WriteLine; // Настраиваем обработчик уведомлений для вывода сообщений на консоль.

            Console.WriteLine("Добро пожаловать в банкомат!"); // Приветственное сообщение для пользователя.
            bool isRunning = true; // Переменная для управления основным циклом работы программы.

            while (isRunning) // Основной цикл программы, продолжается, пока переменная isRunning равна true.
            {
                // Вывод меню действий для пользователя.
                Console.WriteLine("\nВыберите действие:");
                Console.WriteLine("1. Ввести PIN-код");
                Console.WriteLine("2. Снять деньги");
                Console.WriteLine("3. Пополнить банкомат");
                Console.WriteLine("4. Завершить работу");
                Console.Write("Ваш выбор: ");

                string choice = Console.ReadLine(); // Считываем выбор пользователя из консоли.

                switch (choice) // Выполняем действие в зависимости от выбора пользователя.
                {
                    case "1": // Если пользователь выбрал ввод PIN-кода.
                        Console.Write("Введите PIN-код: "); // Просим ввести PIN-код.
                        string pin = Console.ReadLine(); // Считываем PIN-код из ввода пользователя.
                        atm.EnterPin(pin); // Передаем PIN-код в метод банкомата для проверки.
                        break;

                    case "2": // Если пользователь выбрал снятие денег.
                        Console.Write("Введите сумму для снятия: "); // Просим ввести сумму для снятия.
                        if (int.TryParse(Console.ReadLine(), out int withdrawAmount)) // Проверяем корректность введенной суммы.
                        {
                            atm.ExecuteTransaction("withdraw", withdrawAmount); // Передаем запрос на снятие денег банкомату.
                        }
                        else // Если ввод некорректен.
                        {
                            Console.WriteLine("Ошибка: введите корректное значение суммы."); // Сообщаем об ошибке.
                        }
                        break;

                    case "3": // Если пользователь выбрал пополнение банкомата.
                        Console.Write("Введите сумму для пополнения: "); // Просим ввести сумму для пополнения.
                        if (int.TryParse(Console.ReadLine(), out int refillAmount)) // Проверяем корректность введенной суммы.
                        {
                            atm.RefillCash(refillAmount); // Передаем запрос на пополнение банкомата.
                        }
                        else // Если ввод некорректен.
                        {
                            Console.WriteLine("Ошибка: введите корректное значение суммы."); // Сообщаем об ошибке.
                        }
                        break;

                    case "4": // Если пользователь выбрал завершение работы.
                        atm.ExecuteTransaction("exit"); // Передаем запрос на завершение работы банкомату.
                        isRunning = false; // Завершаем основной цикл программы.
                        break;

                    default: // Если пользователь выбрал некорректный пункт меню.
                        Console.WriteLine("Неверный выбор. Пожалуйста, выберите действие из списка."); // Сообщаем об ошибке.
                        break;
                }
            }

            Console.WriteLine("Спасибо за использование банкомата. До свидания!"); // Прощальное сообщение для пользователя.
        }
    }
}
